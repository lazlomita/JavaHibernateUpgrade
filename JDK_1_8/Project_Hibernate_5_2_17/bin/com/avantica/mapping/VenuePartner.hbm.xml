<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping 
	SYSTEM "file:///kuvata/conf/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="com.kuvata.kmf.billing.VenuePartner" table="venue_partner">
		<id name="venuePartnerId" column="venue_partner_id">
			<generator class="com.kuvata.kmf.IdentifierGenerator">
				<param name="className">com.kuvata.kmf.billing.VenuePartner</param>
			</generator>
		</id>		
		<property name="venuePartnerName" column="venue_partner_name"/>
		<property name="revenueSharePercentage" column="revenue_share_percentage"/>
		<property name="visitors" column="visitors"/>
		<property name="dwellTime" column="dwell_time"/>
		<property name="impressionDiscount" column="impression_discount"/>
		<property name="openHours" column="open_hours"/>
					
		<filter name="venuePartnersFilter" condition="(venue_partner_id IN (SELECT DISTINCT(a.venue_partner_id) FROM venue_partner a, permission_entry pe WHERE a.venue_partner_id = pe.permission_entity_id(+)
		AND ( pe.role_id IN (:roleIds) OR ( NVL(pe.role_id, 0) = :excludeEntitiesWithNoRoles AND a.venue_partner_id IN ( SELECT ei.entity_id FROM entity_instance ei WHERE ei.entity_id = a.venue_partner_id AND ei.appuser_id = :appUserId ) ) ) ) )" />
					
		<filter name="venuePartnersFilterAdmin" condition="(venue_partner_id IN (SELECT DISTINCT(a.venue_partner_id) FROM venue_partner a, permission_entry pe WHERE a.venue_partner_id = pe.permission_entity_id(+)
		AND ( pe.role_id IN (:roleIds) OR NVL(pe.role_id, 0) = :excludeEntitiesWithNoRoles ) ) )" />
	</class>
	
	<filter-def name="venuePartnersFilter">
	    	<filter-param name="roleIds" type="long" />
	    	<filter-param name="appUserId" type="string" />	 	    	
	    	<filter-param name="excludeEntitiesWithNoRoles" type="long" />
	</filter-def>	
	<filter-def name="venuePartnersFilterAdmin">
	    	<filter-param name="roleIds" type="long" />
	    	<filter-param name="excludeEntitiesWithNoRoles" type="long" />
	</filter-def>
</hibernate-mapping>