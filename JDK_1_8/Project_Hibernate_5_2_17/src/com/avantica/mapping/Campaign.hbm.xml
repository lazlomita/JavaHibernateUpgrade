<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping 
	SYSTEM "file:///kuvata/conf/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="com.kuvata.kmf.billing.Campaign" table="campaign">
		<id name="campaignId" column="campaign_id">
			<generator class="com.kuvata.kmf.IdentifierGenerator">
				<param name="className">com.kuvata.kmf.billing.Campaign</param>
			</generator>
		</id>		
		<property name="campaignName" column="campaign_name"/>
		<property name="startDt" column="start_dt"/>	
		<property name="endDt" column="end_dt"/>	
		<property name="numDevices" column="num_devices"/>				
		<property name="frequency" column="frequency"/>
		<property name="isBillable" column="is_billable"/>
		<property name="cpm" column="cpm"/>
		<property name="dailyMinImpressions" column="daily_min_impressions"/>
		<property name="maxChargedImpressions" column="max_charged_impressions"/>
		<property name="comments" column="comments"/>
		
		<set name="campaignAssets" inverse="true" lazy="true" cascade="all-delete-orphan" collection-type="com.kuvata.kmf.logging.HistorizableSet">
			<key column="campaign_id" />
			<one-to-many class="com.kuvata.kmf.billing.CampaignAsset"/>
		</set>
		
		<many-to-one class="com.kuvata.kmf.billing.Advertiser" name="advertiser" cascade="none" column="advertiser_id" />
					
		<filter name="campaignsFilter" condition="(campaign_id IN (SELECT DISTINCT(a.campaign_id) FROM campaign a, permission_entry pe WHERE a.campaign_id = pe.permission_entity_id(+)
		AND ( pe.role_id IN (:roleIds) OR ( NVL(pe.role_id, 0) = :excludeEntitiesWithNoRoles AND a.campaign_id IN ( SELECT ei.entity_id FROM entity_instance ei WHERE ei.entity_id = a.campaign_id AND ei.appuser_id = :appUserId ) ) ) ) )" />
					
		<filter name="campaignsFilterAdmin" condition="(campaign_id IN (SELECT DISTINCT(a.campaign_id) FROM campaign a, permission_entry pe WHERE a.campaign_id = pe.permission_entity_id(+)
		AND ( pe.role_id IN (:roleIds) OR NVL(pe.role_id, 0) = :excludeEntitiesWithNoRoles ) ) )" />
	</class>
	
	<filter-def name="campaignsFilter">
	    	<filter-param name="roleIds" type="long" />
	    	<filter-param name="appUserId" type="string" />	 	    	
	    	<filter-param name="excludeEntitiesWithNoRoles" type="long" />
	</filter-def>	
	<filter-def name="campaignsFilterAdmin">
	    	<filter-param name="roleIds" type="long" />
	    	<filter-param name="excludeEntitiesWithNoRoles" type="long" />
	</filter-def>	
</hibernate-mapping>