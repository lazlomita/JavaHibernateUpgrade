<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping 
	SYSTEM "file:///kuvata/conf/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="com.kuvata.kmf.ContentRotation" table="content_rotation">
		<id name="contentRotationId" column="content_rotation_id">
			<generator class="com.kuvata.kmf.IdentifierGenerator">
				<param name="className">com.kuvata.kmf.ContentRotation</param>
			</generator>
		</id>		
		<property name="contentRotationName" column="content_rotation_name"/>
		<property name="csvImportDate" column="csv_import_date"/>		
		<property name="csvImportStatus" column="csv_import_status" type="parkmedia.usertype.PlaylistImportStatus"/>		
		<property name="csvImportDetail" column="csv_import_detail" />
		<property name="hql" column="hql"/>
		<property name="customMethod" column="custom_method"/>
		<property name="runFromContentScheduler" column="run_from_content_scheduler"/>
		<property name="presentationStyle" column="presentation_style" type="com.kuvata.kmf.usertype.PresentationStyleContentRotation" not-null="false" />
		<property name="maxResults" column="max_results"/>
		<property name="type" column="type"/>
		<property name="contentRotationOrder" column="content_rotation_order"/>
		<property name="useRoles" column="use_roles"/>
		<property name="numAssets" column="num_assets"/>
		<property name="lastDynamicUpdateDt" column="last_dynamic_update_dt"/>
		<property name="dynamicContentType" column="dynamic_content_type"/>
		<property name="contentRotationImportDetail" column="content_rotation_import_detail"/>
		<property name="avgLoopLength" column="avg_loop_length"/>
		
		<bag name="contentRotationAssets" inverse="true" lazy="true" cascade="all-delete-orphan" order-by="seq_num" collection-type="com.kuvata.kmf.logging.HistorizableLinkedList">
			<key column="content_rotation_id" />			
			<one-to-many class="com.kuvata.kmf.ContentRotationAsset"/>
		</bag>	
		<set name="contentRotationGrpMembers" inverse="true" lazy="true" cascade="all-delete-orphan">
			<key column="content_rotation_id" />
			<one-to-many class="com.kuvata.kmf.ContentRotationGrpMember"/>
		</set>			
		<set name="contentRotationDisplayareas" lazy="true" table="content_rotation_displayarea" collection-type="com.kuvata.kmf.logging.HistorizableSet">
			<key column="content_rotation_id" />
			<composite-element class="com.kuvata.kmf.ContentRotationDisplayarea">
				<parent name="contentRotation" />
				<many-to-one class="com.kuvata.kmf.Displayarea" name="displayarea" cascade="none" column="displayarea_id" />						
			</composite-element>
		</set>
		<set name="contentRotationImports" inverse="true" lazy="true" cascade="all-delete-orphan" collection-type="com.kuvata.kmf.logging.HistorizableSet">
			<key column="content_rotation_id" />
			<one-to-many class="com.kuvata.kmf.ContentRotationImport"/>
		</set>
					
		<filter name="contentRotationsFilter" condition="(content_rotation_id IN (SELECT DISTINCT(a.content_rotation_id) FROM content_rotation a, permission_entry pe WHERE a.content_rotation_id = pe.permission_entity_id(+)
		AND ( pe.role_id IN (:roleIds) OR ( NVL(pe.role_id, 0) = :excludeEntitiesWithNoRoles AND a.content_rotation_id IN ( SELECT ei.entity_id FROM entity_instance ei WHERE ei.entity_id = a.content_rotation_id AND ei.appuser_id = :appUserId ) ) ) ) )" />
					
		<filter name="contentRotationsFilterAdmin" condition="(content_rotation_id IN (SELECT DISTINCT(a.content_rotation_id) FROM content_rotation a, permission_entry pe WHERE a.content_rotation_id = pe.permission_entity_id(+)
		AND ( pe.role_id IN (:roleIds) OR NVL(pe.role_id, 0) = :excludeEntitiesWithNoRoles ) ) )" />
					
	</class>
	<filter-def name="contentRotationsFilter">
	    	<filter-param name="roleIds" type="long" />
	    	<filter-param name="appUserId" type="string" />	 	    	
	    	<filter-param name="excludeEntitiesWithNoRoles" type="long" />
	</filter-def>	
	<filter-def name="contentRotationsFilterAdmin">
	    	<filter-param name="roleIds" type="long" />	    	
	    	<filter-param name="excludeEntitiesWithNoRoles" type="long" />
	</filter-def>			
</hibernate-mapping>